<?xml version="1.0"?>

<project name="Sync" default="sync:help" description="Contains all the project code to sync data into a main control data repository.">

    <taskdef classname="SyncDumpDataTask" name="sync-dump-data" />

    <!-- This implementation is quite light, so only the 'project' and 'dir' property files dist should contain enough data -->
    <property name="output.LOADED_PROPERTIES_EXIST" value="false" />
    <exec command="if [ -f '${project.basedir}/properties/bin.yml' ]; then echo 'true'; else echo 'false'; fi;" outputProperty="output.LOADED_PROPERTIES_EXIST" />
    <if>
        <equals arg1="${output.LOADED_PROPERTIES_EXIST}" arg2="false" />
        <then>
            <property file="${project.basedir}/properties/dist/project" prefix="project"/>
            <property file="${project.basedir}/properties/dist/dir" prefix="dir" />
        </then>
    </if>


    <target name="sync:help">
        <exec passthru="true" command="${bin.phing} -l" />
    </target>

    <target name="sync:run" description="Trigger the sync for the data in this repository">
        <fail unless="project.repo.data" message="Aborting, no data repository has been registered. Pass the 'project.repo.data' property with the correct repository to use."/>
        <fail unless="commit.message.source" message="Aborting, the commit message source should be listed, Pass the 'commit.message.source' property with a usable messag. E.g 'Jenkins Build' etc."/>
        <property name="sync.output.dir" value="projects" />
        <!-- Clone the data dir into the temp directory -->
        <delete dir="${dir.temp}/data-dir" />
        <exec checkreturn="true" passthru="true" command="git clone ${project.repo.data} ${dir.temp}/data-dir" />
        <sync-dump-data propertyDir="${project.basedir}/properties/dist" outputDir="${dir.temp}/data-dir/${sync.output.dir}" projectBaseDir="${project.basedir}"/>
        <exec checkreturn="true" passthru="true" dir="${dir.temp}/data-dir" command="git add --all" />
        <exec passthru="true" dir="${dir.temp}/data-dir" command="git commit -m'${commit.message.source}: Updated property information to match repository.'" />
        <exec checkreturn="true" passthru="true" dir="${dir.temp}/data-dir" command="git push" />
    </target>
</project>
